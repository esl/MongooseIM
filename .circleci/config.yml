defaults: &defaults
  working_directory: /home/circleci/pki_mongoose
  docker:
    - image: erlang:20.3.8.3

mysql_defaults: &mysql_defaults
  working_directory: /home/circleci/pki_mongoose
  docker:
    - image: erlang:20.3.8.3
    - image: circleci/mysql:5.7-ram
      env:
        - MYSQL_ROOT_PASSWORD=secret
        - MYSQL_DATABASE=ejabberd
        - MYSQL_USER=ejabberd
        - MYSQL_PASSWORD=mongooseim_secret

docs_defaults: &docs_defaults
  working_directory: /home/circleci/pki_mongoose
  docker:
    - image: alpine

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Compile
          command: |
            set -eux
            apt-get update
            apt-get install -y unixodbc-dev tdsodbc
            pushd tools/ssl/
            make all
            popd
            rebar3 ct --compile_only
      - persist_to_workspace:
          root: .
          paths:
            - _build
            - deps
            - tools

  dialyzer:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/pki_mongoose
      - run:
          name: Dialyzer
          command: rebar3 dialyzer

  lint:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/pki_mongoose
      - run:
          name: Lint
          command: rebar3 as lint lint || true

  ct:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/pki_mongoose
      - run:
          name: Common Test
          command: |
           set -e
           apt-get update
           apt-get install -y redis-server
           ./tools/redis start
           rebar3 ct --cover
           rebar3 cover
           ./tools/redis stop
      - store_artifacts:
          path: /home/circleci/pki_mongoose/_build/test/logs/
          destination: /home/circleci/logs/

  integration_tests_mysql:
    <<: *mysql_defaults
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/pki_mongoose
      - run:
          name: Load SQL into MySQL
          command: |
            set -e
            apt-get update
            apt-get install -y mysql-client
            mysql -h 127.0.0.1 -u ejabberd -p mongooseim_secret < mysql.sql
      - run:
          name: Integration Test MySQL
          command: ./tools/test-runner.sh --preset mysql_mnesia --skip-small-tests --skip-setup-db
      - run:
          name: Collect Logs
          command: |
            set -e
            mkdir -p /tmp/logs/bigtest
            mkdir -p /tmp/logs/releases
            cp *.log /tmp/logs/
            cp /home/circleci/pki_mongoose/big_tests/*.log /tmp/logs/bigtest/
            cp  /tmp/logs/
      - store_artifacts:
          path: /tmp/logs
      - store_artifacts:
          path: /home/circleci/pki_mongoose/big_tests/ct_report
      - store_artifacts:
          path: /home/circleci/pki_mongoose/_build/mim1/rel/mongooseim/log
      - store_artifacts:
          path: /home/circleci/pki_mongoose/_build/mim2/rel/mongooseim/log
      - store_artifacts:
          path: /home/circleci/pki_mongoose/_build/mim3/rel/mongooseim/log
      - store_artifacts:
          path: /home/circleci/pki_mongoose/_build/fed1/rel/mongooseim/log
      - store_artifacts:
          path: /home/circleci/pki_mongoose/_build/reg1/rel/mongooseim/log

      - store_artifacts:
          path: /home/circleci/pki_mongoose/_build/mim1/rel/
  docs:
    <<: *docs_defaults
    steps:
      - checkout
      - run:
          name: Install pre-reqs
          command: |
            apk upgrade
            apk add --update ruby ruby-json python py-pip
            gem install --no-document mdl
            pip install mkdocs
      - run:
          name: Lint  Docs
          command: |
            mdl --rules ~MD013,~MD029 doc/ || true
      - run:
          name: Build Docs
          command: |
            echo "use_directory_urls: false" >> mkdocs.yml
            mkdocs build
            mv site mongooseim_docs
            mkdir -p packaged_docs
            cd packaged_docs
            tar -zcvf mongooseim-docs-$(git describe --tags).tar.gz ../mongooseim_docs
      - store_artifacts:
          path: /home/circleci/pki_mongoose/mongooseim_docs
      - store_artifacts:
          path: /home/circleci/pki_mongoose/packaged_docs

workflows:
  version: 2
  build:
    jobs:
      - build
      - docs
      - ct:
          requires:
            - build
      - dialyzer:
          requires:
            - build
      - lint:
          requires:
            - build
      - integration_tests_mysql:
          requires:
            - build
