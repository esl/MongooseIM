version: 2.1


orbs:
  mim:
    commands:
      install_erlang:
        parameters:
          otp:
            type: string
            description: Version of the Erlang package to install
          preset:
            type: string
            description: Preset type
            default: internal_mnesia
          db:
            type: string
            description: Preset type
            default: mnesia
        steps:
        - run:
            name: Install Erlang
            command: |
              wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb
              sudo dpkg -i erlang-solutions_1.0_all.deb
              sudo apt-get update
              sudo apt-get install -y esl-erlang=<<parameters.otp>>
      fetch_packages:
        steps:
        - run:
            name: Install basic packages
            command: |
              sudo apt install unixodbc-dev
              sudo apt install unixodbc
              sudo apt install tdsodbc

    jobs:
      build:
        parallelism: 1
        machine:
          docker_layer_caching: true
        parameters:
          otp:
            type: string
            description: Version of the Erlang package to install
          otp_str:
            type: string
            description: simplified version
          rel_config:
            type: string
            description: Rel config type
            default: with-all

        environment:
          SKIP_RELEASE: 0
          REL_CONFIG: <<parameters.rel_config>>
          SKIP_COMPILE: 0
          SKIP_BUILD_TESTS: 0
          SKIP_COV: 0
        working_directory: ~/app


        steps:
          - checkout
          - install_erlang:
              otp: <<parameters.otp>>
          - restore_cache:
              key: deps-cache--{{ checksum "rebar.lock" }}--{{ checksum "big_tests/rebar.lock" }}--{{ <<parameters.otp_str>> }}
          - fetch_packages
          - run:
              name: Get deps
              command: |
                test 1 = "$SKIP_COV" || sudo apt install python-pip
                test 1 = "$SKIP_RELEASE" || tools/configure $REL_CONFIG
                test 1 = "$SKIP_COMPILE" || ./rebar3 get-deps
          - save_cache:
              key: deps-cache--{{ checksum "rebar.lock" }}--{{ checksum "big_tests/rebar.lock" }}--{{ <<parameters.otp_str>> }}
              paths: ~/.cache/rebar3
          - restore_cache:
              key: build-cache-{{ .Branch }}-{{ .Revision }}--{{ <<parameters.otp_str>> }}
          - run:
              name: Compile
              command: |
                test 1 = "$SKIP_COMPILE" || ./rebar3 compile
          - run:
              name: Make certs
              command: |
                test 1 = "$SKIP_COMPILE" || make certs
          - run:
              name: Install
              command: |
                test 1 = "$SKIP_RELEASE" || make devrel
          - save_cache:
              key: build-cache-{{ .Branch }}-{{ .Revision }}--{{ <<parameters.otp_str>> }}
              paths:
                - _build
                - tools
                - priv
                - rel
                - asngen
                - asn1

      small_tests:
        parallelism: 1
        machine:
          docker_layer_caching: true
        working_directory: ~/app
        parameters:
          otp:
            type: string
            description: Version of the Erlang package to install
          otp_str:
            type: string
            description: simpliefied version
        environment:
          MIX_ENV: test
          SKIP_RELEASE: 1
          SKIP_COMPILE: 0
          SKIP_BUILD_TESTS: 1
          PRESET: small_tests
          DB: mnesia
          SKIP_COV: 0
        steps:
          - checkout
          - install_erlang:
              otp: <<parameters.otp>>
          - fetch_packages
          - restore_cache:
              key: deps-cache--{{ checksum "rebar.lock" }}--{{ checksum "big_tests/rebar.lock" }}--{{ <<parameters.otp_str>> }}
          - run:
              name: Get deps
              command: |
                test 1 = "$SKIP_COV" || sudo apt install python-pip
                test 1 = "$SKIP_RELEASE" || tools/configure $REL_CONFIG
                test 1 = "$SKIP_COMPILE" || ./rebar3 get-deps
          - save_cache:
              key: deps-cache--{{ checksum "rebar.lock" }}--{{ checksum "big_tests/rebar.lock" }}--{{ <<parameters.otp_str>> }}
              paths: ~/.cache/rebar3
          - run:
              name: Compile
              command: |
                test 1 = "$SKIP_COMPILE" || ./rebar3 compile
          - run:
              name: Run tests
              command: |
                KEEP_COVER_RUNNING=1 ./tools/travis-test.sh -p $PRESET -s true


      big_tests:
        parallelism: 1
        machine:
          docker_layer_caching: true
        working_directory: ~/app
        parameters:
          otp:
            type: string
            description: Version of the Erlang package to install
          otp_str:
            type: string
            description: simpliefied version
          skip_release:
            type: string
            description: skip release
            default: "0"
          skip_compile:
            type: string
            description: skip compile
            default: "0"
          skip_build_tests:
            type: string
            description: skip compile
            default: "0"
          preset:
            type: string
            description: preset
            default: internal_mnesia
          db:
            type: string
            description: db
            default: mnesia
          skip_cov:
            type: string
            description: skip cov
            default: "0"
        environment:
          MIX_ENV: test
          SKIP_RELEASE: <<parameters.skip_release>>
          SKIP_COMPILE: <<parameters.skip_compile>>
          SKIP_BUILD_TESTS: <<parameters.skip_build_tests>>
          PRESET: <<parameters.preset>>
          DB: <<parameters.db>>
          SKIP_COV: <<parameters.skip_cov>>
          ELASTICSEARCH_VERSION: 5.6.9
          CASSANDRA_VERSION: 3.9
          TEST_SPEC: mam.spec
          REDIS_VERSION: 3.2.10
        steps:
          - checkout
          - install_erlang:
              otp: <<parameters.otp>>
          - fetch_packages
          - restore_cache:
              keys:
                - build-cache-{{ .Branch }}-{{ .Revision }}--{{ <<parameters.otp_str>> }}
          - restore_cache:
              keys:
                - deps-cache--{{ checksum "rebar.lock" }}--{{ checksum "big_tests/rebar.lock" }}--{{ <<parameters.otp_str>> }}
          - run:
              name: Build tests
              command: |
                test 1 = "$SKIP_BUILD_TESTS" || tools/travis-build-tests.sh
                test 1 = "$SKIP_COV" || sudo pip install codecov
          - run:
              name: Setup database
              command: |
                tools/travis-setup-db.sh
                if [ $PRESET = ldap_mnesia ]; then sudo tools/travis-setup-ldap.sh; fi
                if [ $PRESET = mysql_redis ]; then sudo tools/travis-setup-rmq.sh; tools/setup-redis.sh; fi
                echo '127.0.0.1 muc.localhost' | sudo tee -a /etc/hosts
          - run:
              name: Run tests
              command: |
                KEEP_COVER_RUNNING=1 ./tools/travis-test.sh -p $PRESET -s false
#          - run:
#              name: Build Success
#              when: on_success
#              ## TODO push docker image
#              command: |
#                echo "Success!"
#                test 1 = "$SKIP_COV" || ./rebar3 codecov analyze
#                test 1 = "$SKIP_COV" || codecov --disable=gcov --env PRESET
#                test 1 = "$SKIP_COV" || ./rebar3 coveralls send
          - run:
              name: Build Failed - Logs
              when: on_fail
              command: |
                echo "Failure!"
                cat _build/mim1/rel/mongooseim/log/ejabberd.log
#          - run:
#                      # Upload logs to s3 for debugging
#              name: Upload results
#              command: |
#                test 1 = "$SKIP_REPORT_UPLOAD" ||
#                  tools/travis-prepare-log-dir.sh
#                test 1 = "$SKIP_REPORT_UPLOAD" ||
#                  if [ -n "${AWS_SECRET_ACCESS_KEY}" ]; then tools/travis-upload-to-s3.sh; fi
#                test 1 = "$SKIP_REPORT_UPLOAD" ||
#                  tools/travis-publish-github-comment.sh
#                test 1 = "$SKIP_REPORT_UPLOAD" ||
#                  if [ -n "${GDRIVE_SERVICE_ACCOUNT_CREDENTIALS}" ]; then tools/travis-upload-to-gdrive.sh; fi
#                test 1 = "$SKIP_REPORT_UPLOAD" ||
#                  tools/travis-secure-erase.sh /tmp/serviceAccountCredentials

workflows:
  version: 2
  build_and_test:
    jobs:
#      - mim/build:
#          name: mim_otp_20_3
#          otp: 1:20.3.8.22-1
#          otp_str: "203"
#      - mim/small_tests:
#          otp: 1:20.3.8.22-1
#          otp_str: "203"
#          requires:
#            - mim_otp_20_3
#      - mim/big_tests:
#          name: mssql_mnesia
#          otp: 1:20.3.8.22-1
#          otp_str: "203"
#          preset: odbc_mssql_mnesia
#          db: mssql
#          requires:
#            - mim_otp_20_3
#      - mim/big_tests:
#          name: ldap_mnesia
#          otp: 1:20.3.8.22-1
#          otp_str: "203"
#          preset: ldap_mnesia
#          db: mnesia
#          requires:
#            - mim_otp_20_3
#      - mim/big_tests:
#          name: internal_mnesia
#          otp: 1:20.3.8.22-1
#          otp_str: "203"
#          preset: internal_mnesia
#          db: mnesia
#          requires:
#            - mim_otp_20_3
#      - mim/big_tests:
#          name: elasticsearch_and_cassandra
#          otp: 1:20.3.8.22-1
#          otp_str: "203"
#          preset: elasticsearch_and_cassandra_mnesia
#          db: "elasticsearch cassandra"
#          requires:
#            - mim_otp_20_3
#      - mim/build:
#          name: mim_otp_21_3
#          otp: 1:21.3.8.4-1
#          otp_str: "213"
      - mim/small_tests:
          otp: 1:21.3.8.4-1
          otp_str: "213"
#          requires:
#            - mim_otp_21_3
#      - mim/big_tests:
#          name: pgsql_mnesia
#          otp: 1:21.3.8.4-1
#          otp_str: "213"
#          preset: pgsql_mnesia
#          db: pgsql
#          requires:
#            - mim_otp_21_3
#      - mim/big_tests:
#          name: mysql_redis
#          otp: 1:21.3.8.4-1
#          otp_str: "213"
#          preset: mysql_redis
#          db: mysql
#          requires:
#            - mim_otp_21_3
#      - mim/big_tests:
#          name: riak_mnesia
#          otp: 1:21.3.8.4-1
#          otp_str: "213"
#          preset: riak_mnesia
#          db: riak
#          requires:
#            - mim_otp_21_3
#      - mim/build:
#          name: mim_otp_22
#          otp: 1:22.0.4-1
#          otp_str: "22"
#          requires:
#            - internal_mnesia
#      - mim/big_tests:
#          name: dialyzer_only
#          otp: 1:22.0.4-1
#          otp_str: "2"
#          preset: dialyzer_only
#          db: mnesia
#          skip_release: "1"
#          skip_build_tests: "1"
#          skip_cov: "1"
#          requires:
#            - mim_otp_22

