#!/bin/bash

# Purpose:
# Changes connection string data for REDIS servers that share the same connection
# string format in test.config in ejabberd_tests.
# This is template file - actual values are injected here using sed called from
# external script. This is way to bypass sed's inability to expand variables
# properly in this case. Alternative way would be to use awk or perl instead.
# Used by:
# Go-CD, Linux, set-redis-params-ctrl.sh.

if (([ $# -eq 1 ]) && ([ $1 = "runinplace" ]))
then
    MAYBE_IN_PLACE="-i"
else
    MAYBE_IN_PLACE=""
fi

TARGET_SPEC='../test.config'

if [ -e ${TARGET_SPEC} ]
then
    #sed 's/{redis, \[{pool_size, 3}, {worker_config, \[{host, \\"localhost\\"}, {port, 6379}\]}\]}/-----------------------/g' test.config
    sed 's/{redis, \[{pool_size, 3}, {worker_config, \[{host, \\"localhost\\"}, {port, 6379}\]}\]}/{redis, \[{pool_size, 3}, {worker_config, \[{host, \\"HOST\\"}, {port, PORT}\]}\]}/g' ${MAYBE_IN_PLACE} ${TARGET_SPEC}
else
    echo "Target file ${TARGET_SPEC} not found!"
fi


# if [ -e ${TARGET_SPEC} ]
# then
#     sed 's/{odbc_server, {DBTYPE, \\"localhost\\", \\"ejabberd\\", \\"ejabberd\\", \\"%ODBC_PASSWORD%\\"/{odbc_server, {DBTYPE, \\"HOST\\", \\"DATABASENAME\\", \\"USER\\", \\"DBPASSWORD\\"/g' ${MAYBE_IN_PLACE} ${TARGET_SPEC}
# else
#     echo "Target file ${TARGET_SPEC} not found!"
# fi

