# vi: ft=dockerfile
ARG dockerfile_platform

FROM $dockerfile_platform AS builder

# Install build deps
RUN apt-get update
RUN apt-get install -y make \
                       g++ \
                       libssl-dev \
                       libexpat-dev \
                       zlib1g-dev \
                       locales \
                       unixodbc-dev \
                       git

RUN apt-get -y update && apt-get -y install curl gnupg && \
        curl -O http://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb && \
        dpkg -i erlang-solutions_2.0_all.deb && apt-get update
ARG erlang_version
RUN apt-get install -y esl-erlang=1:$erlang_version


# Fix locales
RUN locale-gen en_US.UTF-8

# Copy source code and put building files
WORKDIR /root/
COPY . ./mongooseim
RUN rm -rf ./mongooseim/_build

RUN cp -r ./mongooseim/tools/pkg/scripts/deb .

ARG version
ARG revision

RUN ./deb/build_package.sh $version $revision

# Create image for sharing and validation of built package
FROM $dockerfile_platform

# Copy built package from previous image and install it with required dependencies
RUN apt-get update && apt-get -y install openssl netcat && apt-get -y clean
WORKDIR /root/
COPY --from=builder /root/*.deb .

# Instll mongooseim with required dependencies
RUN apt-get update; dpkg -i *.deb; apt-get install -y -f

# Sample check if MiM works
RUN mongooseimctl start && sleep 60 && nc -z localhost 5222 && mongooseimctl stop

RUN mkdir /built_packages
CMD mv /root/mongooseim*.deb /built_packages
