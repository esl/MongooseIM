# vi: ft=dockerfile
ARG builder_image
ARG target_image

FROM $builder_image AS builder

# Install build deps
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update
RUN apt-get install -y locales git make zlib1g-dev unixodbc-dev gcc g++ libssl-dev curl

ARG erlang_version

# Fix locales
RUN locale-gen en_US.UTF-8

# Copy source code and put building files in proper directories
# The .dockerignore file in root dir ensures only needed files
# including not commited changes are used to build the package
WORKDIR /root/
COPY . ./mongooseim

RUN cp -r ./mongooseim/tools/pkg/scripts/deb .

ARG version
ARG revision

RUN ./deb/build_package.sh $version $revision $erlang_version

# Create image for sharing and validation of built package
FROM $target_image AS target

# Copy built package from previous image and install it with required dependencies
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get -y install openssl procps && apt-get -y clean
WORKDIR /root/
COPY --from=builder /root/*.deb .

# Install mongooseim with required dependencies
RUN apt-get update && dpkg -i *.deb && apt-get install -y -f

# Simple check if MiM works
COPY tools/wait-for-it.sh .
COPY tools/pkg/scripts/smoke_test.sh .
COPY tools/pkg/scripts/smoke_templates.escript .

RUN ./smoke_test.sh

RUN mkdir /built_packages
CMD mv /root/mongooseim*.deb /built_packages
