{hosts, "[\"localhost\",
          \"anonymous.localhost\",
          \"localhost.bis\"
         ]"}.
{outgoing_s2s_port, 5269}.
{odbc_server, ""}.
{sm_backend, "{mnesia, []}"}.
{auth_method, "internal"}.
{s2s_addr, "{ {s2s_addr, \"localhost2\"}, {127,0,0,1} }."}.
{s2s_default_policy, allow}.
{node_name, "ejabberd2@localhost"}.
{ejabberd_c2s_port, 5232}.
{ejabberd_s2s_in_port, 5279}.
{cowboy_port, 5281}.
{cowboy_port_secure, 5286}.
{mod_last, "{mod_last, []},"}.
{mod_privacy, "{mod_privacy, []},"}.
{mod_blocking, "{mod_blocking, []},"}.
{mod_private, "{mod_private, []},"}.
{mod_roster, "{mod_roster, []},"}.
{mod_vcard, "{mod_vcard, [ %{matches, 1},\n"
                "%{search, true},\n"
                "{host, \"vjud.@HOST@\"}\n"
                "]},"}.
{http_api_old_endpoint, "{5289, \"127.0.0.1\"}"}.
{http_api_endpoint, "{8090, \"127.0.0.1\"}"}.
{http_api_client_endpoint, "8091"}.
{s2s_use_starttls, "{s2s_use_starttls, optional}."}.
{s2s_certfile, "{s2s_certfile, \"priv/ssl/fake_server.pem\"}."}.
{tls_config, "{certfile, \"priv/ssl/fake_server.pem\"}, starttls, {ciphers, \"DHE-RSA-AES256-SHA\"},"}.
{secondary_c2s,
    "{5233, ejabberd_c2s, [
    {zlib, 4096},
    {access, c2s},
        {shaper, c2s_shaper},
        {max_stanza_size, 65536},
        {certfile, \"priv/ssl/fake_server.pem\"}, tls,
        {ciphers, \"DHE-RSA-AES256-SHA\"}
    ]},"}.
{ejabberd_service, ",{8899, ejabberd_service, [\n"
    "                {access, all},\n"
    "                {shaper_rule, fast},\n"
    "                {ip, {127, 0, 0, 1}},\n"
    "                {password, \"secret\"}\n"
    "           ]}"}.
{all_metrics_are_global, true}.
{c2s_dhfile, ",{dhfile, \"priv/ssl/fake_dh_server.pem\"}"}.
{s2s_dhfile, ",{dhfile, \"priv/ssl/fake_dh_server.pem\"}"}.

{normal_shaper_rate, 1000}.

{mongooseim_runner_user, []}.
{mongooseim_script_dir, "$(cd ${0%/*} && pwd)"}.
{mongooseim_etc_dir, "$RUNNER_BASE_DIR/etc"}.
{mongooseim_log_dir, "log"}.
{mongooseim_mdb_dir, "$RUNNER_BASE_DIR/Mnesia.$NODE"}.
{mongooseim_mdb_dir_toggle, "%"}.
{mongooseim_lock_dir, "$EJABBERD_DIR/var/lock"}.
