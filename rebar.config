{erl_opts, [debug_info,
            {i, ["include"]},
            {d, xml_nif},
            {platform_define, "^(20)", fun_stacktrace}]}.

%% For behaviour info
{erl_first_files, [
    "src/gen_mod.erl",
    "src/mod_event_pusher_sns.erl"
]}.

{xref_checks, [undefined_function_calls,
               undefined_functions,
               locals_not_used,
               exports_not_used,
               deprecated_function_calls,
               deprecated_functions]}.

{xref_ignores, [
    eldap_filter_yecc, 'XmppAddr', mongoose_xmpp_errors,
    %% *_backend
    mongoose_rdbms_backend, mod_vcard_backend,
    ejabberd_sm_backend, mod_auth_token_backend,
    mod_bosh_backend, mod_event_pusher_push_backend,
    mod_global_distrib_mapping_backend, mod_http_upload_backend,
    mod_inbox_backend, mod_keystore_backend,
    mod_last_backend, mod_mam_cassandra_arch_params,
    mod_mam_cassandra_prefs_params, mod_mam_muc_cassandra_arch_params,
    mod_muc_db_backend, mod_muc_light_codec_backend,
    mod_muc_light_db_backend, mod_offline_backend,
    mod_offline_chatmarkers_backend, mod_privacy_backend,
    mod_private_backend, mod_pubsub_cache_backend,
    mod_pubsub_db_backend, mod_revproxy_dynamic,
    mod_roster_backend, mod_routing_machine,
    mod_shared_roster, mod_smart_markers_backend, mongoose_rdbms_type,
    %% Deprecated functions
    {crypto, rand_uniform, 2},
    {ranch, start_listener, 6},
    {ranch, accept_ack, 1},
    {mongoose_lib, deprecated_logging, 1},
    {http_uri, parse, 1},
    {http_uri, scheme_defaults, 0},
    {sys, get_debug, 3},
    {httpd_util, integer_to_hexlist, 1}
]}.

{port_specs,
 [
  {".*", "priv/lib/ejabberd_zlib_drv.so", ["c_src/ejabberd_zlib_drv.c"], [{env, [{"LDFLAGS", "$LDFLAGS -lz"}]}]},
  {".*", "priv/lib/mongoose_mam_id.so", ["c_src/mongoose_mam_id.cpp"], [{env, [{"CXXFLAGS", "$CXXFLAGS -O3 -std=c++11"}]}]}
 ]}.

{require_min_otp_vsn, "21"}.

%% We agreed to use https:// for deps because of possible firewall issues.
%%
%% If you still prefer git protocol, update your "~/.gitconfig" by running:
%% git config --global url."git://github".insteadOf https://github
{deps,
 [
  {base16, "2.0.0"},
  {exml, "3.0.5", {pkg, hexml}},
  {lager, "3.9.2"}, % We're keeping this to override the dependencies
  {cowboy, "2.9.0"},
  {exometer_core, {git, "https://github.com/esl/exometer_core.git", {branch, "master"}}},
  {exometer_report_graphite, {git, "https://github.com/esl/exometer_report_graphite.git", {branch, "master"}}},
  {exometer_report_statsd, {git, "https://github.com/esl/exometer_report_statsd.git", {branch, "master"}}},
  {fast_scram, "0.2.0"},
  {jiffy, "1.0.8"},
  {fusco, {git, "https://github.com/esl/fusco.git", {branch, "master"}}},
  {idna, "6.0.1"},
  {uuid, "1.8.0", {pkg, uuid_erl}},
  {fast_tls, {git, "https://github.com/processone/fast_tls.git", {ref, "ceb277f"}}},
  {lasse, "1.2.0"},
  {worker_pool, "4.0.3"},
  %% We use a git repo here, because HEX packet pulls riak_pb version
  %% that recompiles its files each run of "rebar3 compile"
  %% (which slows down development)
  {riakc, {git, "https://github.com/basho/riak-erlang-client.git", {branch, "3.0.7"}}},
  {cqerl, {git, "https://github.com/esl/cqerl.git", {branch, "master"}}},
  {mysql, "1.6.0"},
  {epgsql, "4.5.0"},
  {eodbc, {git, "https://github.com/arcusfelis/eodbc.git", {branch, "master"}}},
  {tirerl, "1.1.0"},

  {cache_tab, "1.0.28"},
  {jid, "1.0.0", {pkg, mongoose_jid}},

  {proper, "1.4.0"},
  {meck, "0.8.13"},

  {pa, {git, "https://github.com/erszcz/pa.git", {branch, "master"}}},
  {bbmustache, "1.10.0"},
  {recon, "2.5.1"},
  {erlcloud, "3.5.5"},
  %% MR of jwerl - https://gitlab.com/glejeune/jwerl/-/merge_requests/13
  {jwerl, {git, "https://gitlab.com/vkatsuba/jwerl.git", {branch, "refactoring/otp-24"}}},
  {csv, {git, "https://github.com/bszaf/csv.git", {branch, "master"}}},
  %% Do not upgrade cpool to version 0.1.1, it has bugs
  {cpool, "0.1.0"},
  {observer_cli, "1.5.4"},
  {gun, "1.3.3"},
  {nkpacket, {git, "https://github.com/michalwski/nkpacket.git", {ref, "f7c5349"}}},
  {nksip, {git, "https://github.com/NetComposer/nksip.git", {ref, "1a29ef3"}}},
  {amqp_client, "3.9.5"},
  {eredis, "1.2.0"},
  {gen_fsm_compat, "0.3.0"},
  {erlang_pmp, "0.1.1"},
  {erl_csv_generator, {git, "https://github.com/aleklisi/erl_csv_generator.git", {branch, master}}},
  {syslogger, "*", {git, "https://github.com/NelsonVides/syslogger.git", {branch, "build_port_compiler"}}},
  {flatlog, {git, "https://github.com/ferd/flatlog.git", {branch, "master"}}},

  %% trails and cowboy_swagger for generating of Swagger documentation
  {trails, "2.1.0"},
  {cowboy_swagger, "2.2.2"},
  {tomerl, "0.4.0"}
 ]}.

{relx, [{release, { mongooseim, {cmd, "cat VERSION | tr -d '\r\n'"} },
         []}, %%Apps list is dynamicaly set by rebar.config.script

        {dev_mode, true},
        %% TODO: extra copies waste space, but mongooseim script requires the files in a certain place
        {include_erts, true},

        {generate_start_script, false},
        {extended_start_script, false},

        %% Don't forget to update tools/test_runner/apply_templates.erl, when changing templates
        {overlay, [
                   {mkdir, "priv/ssl"},
                   {copy, "tools/ssl/mongooseim/cert.pem",        "priv/ssl/fake_cert.pem"},
                   {copy, "tools/ssl/mongooseim/key.pem",         "priv/ssl/fake_key.pem"},
                   {copy, "tools/ssl/mongooseim/server.pem",      "priv/ssl/fake_server.pem"},
                   {copy, "tools/ssl/mongooseim/dh_server.pem",   "priv/ssl/fake_dh_server.pem"},
                   {copy, "tools/ssl/ca/cacert.pem",        "priv/ssl/cacert.pem"},

                   {copy,     "rel/files/erl",          "erts-\{\{erts_vsn\}\}/bin/erl"},
                   %% Copy the whole directory scripts into scripts.
                   %% Still works, if the destination "scripts/" directory exists.
                   {copy, "rel/files/scripts",   "./"},
                   {copy, "rel/files/templates", "./"},
                   {copy, "rel/files/templates.ini", "etc/templates.ini"},

                   {template, "rel/files/nodetool",     "erts-\{\{erts_vsn\}\}/bin/nodetool"},

                   {template, "rel/files/mongooseim",       "bin/mongooseim"},
                   {template, "rel/files/mongooseimctl",    "bin/mongooseimctl"},
                   {template, "rel/files/app.config",       "etc/app.config"},
                   {template, "rel/files/vm.args",          "etc/vm.args"},
                   {template, "rel/files/vm.dist.args",     "etc/vm.dist.args"},

                   {copy, "priv/logo.txt", "priv/logo.txt"},
                   {copy, "VERSION", "priv/VERSION"}
                  ]}

       ]}.

{dist_node,
 [{setcookie, ejabberd},
  {sname, 'mongooseim@localhost'}
 ]}.

{profiles, [ {prod,    [{relx, [ {dev_mode, false},
                                 {overlay_vars, "rel/vars-toml.config"},
                                 {overlay, [{template, "rel/files/mongooseim.toml", "etc/mongooseim.toml"}]} ]},
                                 {erl_opts, [{d, 'PROD_NODE'}]} ]},
             %% development nodes
             {mim1,    [{relx, [ {overlay_vars, ["rel/vars-toml.config", "rel/mim1.vars-toml.config"]},
                                 {overlay, [{template, "rel/files/mongooseim.toml", "etc/mongooseim.toml"}]} ]}]},
             {mim2,    [{relx, [ {overlay_vars, ["rel/vars-toml.config", "rel/mim2.vars-toml.config"]},
                                 {overlay, [{template, "rel/files/mongooseim.toml", "etc/mongooseim.toml"}]} ]}]},
             {mim3,    [{relx, [ {overlay_vars, ["rel/vars-toml.config", "rel/mim3.vars-toml.config"]},
                                 {overlay, [{template, "rel/files/mongooseim.toml", "etc/mongooseim.toml"}]} ]}]},
             {fed1,    [{relx, [ {overlay_vars, ["rel/vars-toml.config", "rel/fed1.vars-toml.config"]},
                                 {overlay, [{template, "rel/files/mongooseim.toml", "etc/mongooseim.toml"}]} ]}]},
             {reg1,    [{relx, [ {overlay_vars, ["rel/vars-toml.config", "rel/reg1.vars-toml.config"]},
                                 {overlay, [{template, "rel/files/mongooseim.toml", "etc/mongooseim.toml"}]} ]}]}
            ]}.

{plugins,
 [
  {pc, "1.11.0"},
  {provider_asn1, "0.2.3"},
  {rebar3_codecov, "0.2.0"},
  {rebar3_lint, "0.1.11"}
 ]}.

{provider_hooks,
 [{pre,  [{compile, {asn, compile}}, {compile, {pc, compile}}]},
  {post, [{clean, {asn, clean}}, {clean, {pc, clean}}]
  }]}.

{overrides,
   [{override, stringprep,
    [ {provider_hooks,
       [ {post, [ {compile, {pc, compile}},
                  {clean, {pc, clean}} ] }] } ]},
   {del, eper, [{erl_opts, [warnings_as_errors]}]},
   %% Erlang JWT Library is in elixir and wants elvis for tests
   %% Remove elvis plugin to reduce deps
   {override, jwerl, [{plugins, [rebar3_elixir, rebar3_hex]}]}
 ]}.

{dialyzer, [{plt_extra_apps, [jid, cowboy, lasse, p1_utils, ranch, gen_fsm_compat, epgsql]}]}.

{cover_enabled, true}.
{cover_print_enabled, true}.
{cover_export_enabled, true}.
{coveralls_coverdata, "/tmp/*.coverdata"}.
{coveralls_service_name, "github"}.
{coveralls_parallel, true}.

{codecov_opts,
 [
  %% Assuming /tmp/mongoose_combined.coverdata
  {path, ["/tmp", "_build/test/cover"]}
 ]}.

{edoc_opts, [{preprocess, true}, {dir, "edoc"}]}.
