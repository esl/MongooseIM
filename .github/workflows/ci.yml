name: CI

on:
  push:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # required for run_common_test.erl
  KEEP_COVER_RUNNING: '1'
  SKIP_AUTO_COMPILE: 'true'

jobs:
  small_tests:
    name: small_tests on OTP ${{matrix.otp}}
    strategy:
      matrix:
        otp: ['23.0.3', '22.3']
    runs-on: ubuntu-20.04
    env:
      PRESET: 'small_tests'
    steps:
      - uses: actions/checkout@v2
      - uses: ErlGang/setup-erlang@v1.0.0
        with:
          otp-version: ${{ matrix.otp }}
      - uses: actions/cache@v2
        with:
          path: ~/.cache/rebar3
          key: rebar3-${{ hashFiles('rebar.lock') }}
      - name: create certificates
        run: make certs
      - name: run test
        run: tools/travis-test.sh -p $PRESET -s true -e true
      - name: prepare coverage report
        run: ./rebar3 codecov analyze --lcov --json false
      - name: report coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: small_tests on OTP ${{matrix.otp}}
          path-to-lcov: ./lcov.info
          parallel: true

  big_tests:
    name: ${{matrix.preset}} on OTP ${{matrix.otp}}
    strategy:
      matrix:
        preset: [internal_mnesia, pgsql_mnesia, mysql_redis, odbc_mssql_mnesia,
                 ldap_mnesia, riak_mnesia, elasticsearch_and_cassandra_mnesia]
        otp: ['23.0.3']
    runs-on: ubuntu-20.04
    env:
      PRESET: ${{matrix.preset}}
    steps:
      - uses: actions/checkout@v2
      - uses: ErlGang/setup-erlang@v1.0.0
        with:
          otp-version: ${{matrix.otp}}
      - uses: actions/cache@v2
        with:
          path: ~/.cache/rebar3
          key: rebar3-${{ hashFiles('rebar.lock') }}
      - name: create certificates
        run: make certs
      - name: set required env variables for preset
        run: tools/gh-actions-configure-preset.sh "$PRESET"
      - if: ${{ matrix.preset == 'odbc_mssql_mnesia' }}
        run: sudo apt-get install -y tdsodbc
      - name: build releases
        run: tools/build-releases.sh
      - name: build big tests
        run: tools/travis-build-tests.sh
      - name: start backends
        run: tools/travis-setup-db.sh
      - name: run test
        run: tools/travis-test.sh -p $PRESET -s false -e false
      - name: prepare coverage report
        run: ./rebar3 codecov analyze --lcov --json false
      - name: report coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ${{matrix.preset}} on OTP ${{matrix.otp}}
          path-to-lcov: ./lcov.info
          parallel: true

  coveralls_webhook:
    needs: [big_tests, small_tests]
    runs-on: ubuntu-20.04
    steps:
      - name: Finish coveralls parallel build
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  dialyzer:
    name: dialyzer on OTP ${{matrix.otp}}
    strategy:
      matrix:
        otp: [ '23.0.3']
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: ErlGang/setup-erlang@v1.0.0
        with:
          otp-version: ${{matrix.otp}}
      - run: tools/travis-test.sh -p dialyzer_only

  pkg:
    name: ${{matrix.pkg}} package
    strategy:
      matrix:
        pkg: [centos_7, debian_stretch]
    runs-on: ubuntu-20.04
    env:
      ESL_ERLANG_PKG_VER: "22.3.4.9-1"
      pkg_PLATFORM: ${{matrix.pkg}}
    steps:
      - uses: actions/checkout@v2
      - run: tools/travis-test.sh -p pkg
