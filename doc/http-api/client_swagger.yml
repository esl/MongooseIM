swagger: '2.0'
info:
  version: "0.0.1"
  title: "MongooseIM client REST API"
  description: |
    This API described alternate, to XMPP way of using MongooseIM.
    All the requests require authantication. Thanks to that the server always knows
    who sent the request and can decide whether given user is authorized or not
basePath: /v1
schemes:
  - https
paths:
  /messages:
    get:
      description: |
        Gets recent messages from the archive. For the authenticated users.
        Optional query param of **size** determines
        size of returned array
      parameters:
        - name: size
          in: query
          description: Number of recent messages to return. Default is 50
          required: false
          type: number
          format: integer
      responses:
        200:
          description: Successful response
          schema:
            title: Messages
            type: array
            items:
              $ref: '#/definitions/Message'
    post:
      description: Sends a one-to-one message to given recipient
      parameters:
        - name: message
          in: body
          description: The message to be sent.
          required: true
          schema:
            title: Message
            properties:
              to:
                type: string
                description: recipient's JID
              body:
                type: string
      responses:
        200:
          description: The message was sent.
          schema:
            title: MessageID
            type: string
  /groups:
    get:
      description: Returns all groups to which the user is subscribed
      parameters:
        - name: size
          in: query
          description: Number of recent messages to return. Default is 50
          required: false
          type: number
          format: integer
      responses:
        200:
          description: List of groups
          schema:
            title: Groups
            type: array
            items:
              $ref: '#/definitions/Group'
    post:
      description: Creates a new group
      parameters:
       - name: group
         in: body
         description: Creates a new group of given name and sends invitation to specified users.
         schema:
           title: Group
           properties:
             id:
               $ref: '#/definitions/JID'
             name:
               type: string
             occupants:
               type: array
               items:
                 $ref: '#/definitions/JID'
      responses:
        200:
          description: OK
  /groups/{id}:
    get:
      description: Returns detailed information about given group.
      parameters:
        - name: id
          in: path
          description: Group's unique ID as described in the JID definition.
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            title: Group
            properties:
              name:
                type: string
              occupant:
                type: array
                items:
                  $ref: '#/definitions/JID'
  /groups/{id}/messages:
    get:
      description: Returns messages exchanged in given group. TODO pagination
      parameters:
        - name: id
          in: path
          description: Group's unique id as described in the JID definition.
          type: string
          required: true
        - name: size
          in: query
          description: Number of recent messages to return. Default is 50
          required: false
          type: number
          format: integer
      responses:
        200:
          description: List messages
          schema:
            title: ListOfMessages
            type: array
            items:
              $ref: '#/definitions/Message'
    post:
      description: Sends a message to given group
      parameters:
        - in: path
          name: id
          description: Group's unique ID as described in the JID definition.
          required: true
          type: string
        - in: body
          name: message
          description: The message to be sent to the group
          required: true
          schema:
            title: Message
            type: string
      responses:
        200:
          description: Sent message ID
          schema:
            title: MessageID
            type: string
security:
  - mongoose_basic_auth: []
securityDefinitions:
  mongoose_basic_auth:
    type: basic
definitions:
  Message:
    properties:
      from:
        $ref: '#/definitions/JID'
      to:
        $ref: '#/definitions/JID'
      id:
        type: string
      body:
        type: string
  JID:
    type: string
    description: |
      This is user's JID (Jabber ID) which consist of username and server.
      Example: alice@wonderland.com
  Group:
    properties:
      id:
        $ref: '#/definitions/JID'
      name:
        type: string

